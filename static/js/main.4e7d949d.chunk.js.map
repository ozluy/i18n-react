{"version":3,"sources":["logo.svg","i18n/index.js","i18n/tr/index.js","i18n/tr/header.js","i18n/tr/footer.js","i18n/en/index.js","i18n/en/header.js","i18n/en/footer.js","i18n/cs/index.js","i18n/cs/header.js","i18n/cs/footer.js","components/LanguageContex/index.js","components/Header/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","languageObject","name","items","id","defaultMessage","map","lang","messages","defaultValues","item","attr","Object","objectSpread","defineProperty","default","defaultMessages","en","addLocaleData","toConsumableArray","concat","tr","cs","Component","LanguageContext","React","createContext","currentLang","setLang","LanguageProvider","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setLanguage","data","setState","state","react_default","a","createElement","Provider","value","index_es","locale","defaultLocale","translations","children","withLang","_ref","language","className","txt","onChange","val","target","src","logo","alt","Consumer","assign","Footer","injectIntl","intl","values","year","formatMessage","App","LanguageContex_LanguageProvider","Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e7d949d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import en from './en'\nimport tr from './tr'\nimport cs from './cs'\n\nconst languages = [tr, en, cs]\n\nconst languageObject = {}\n\nlanguages.map(lang => {\n  const messages = {}\n  let defaultValues = {}\n\n  lang.items.map(item => {\n    item.map(attr => {\n      messages[attr.id] = attr.defaultMessage\n      defaultValues = {\n        ...defaultValues,\n        ...{ [attr.id]: attr },\n      }\n      return attr\n    })\n\n    return item\n  })\n  languageObject[lang.name] = {\n    messages,\n    default: defaultValues,\n  }\n  return lang\n})\n\nexport const defaultMessages = languageObject.en.default\n\nexport default languageObject\n","import header from \"./header\"\nimport footer from \"./footer\"\n\nexport default {\n  name: \"tr\",\n  items: [header, footer]\n}\n","export default [\n  {\n    id: \"header-nav-home\",\n    defaultMessage: \"Anasayfa\"\n  },\n  {\n    id: \"header-nav-about\",\n    defaultMessage: \"Hakkımızda\"\n  },\n  {\n    id: \"header-nav-contact\",\n    defaultMessage: \"İletişim\"\n  }\n]\n","export default [\n  {\n    id: \"footer-copyright\",\n    defaultMessage: \"Tüm hakları {name} aittir, {year}\"\n  },\n  {\n    id: \"footer-made-with-love\",\n    defaultMessage: \"❤️ile yapıldı\"\n  }\n]\n","import header from \"./header\"\nimport footer from \"./footer\"\n\nexport default {\n  name: \"en\",\n  items: [header, footer]\n}\n","export default [\n  {\n    id: \"header-nav-home\",\n    defaultMessage: \"Home\"\n  },\n  {\n    id: \"header-nav-about\",\n    defaultMessage: \"About us\"\n  },\n  {\n    id: \"header-nav-contact\",\n    defaultMessage: \"Contact\"\n  }\n]\n","export default [\n    {\n      id: \"footer-copyright\",\n      defaultMessage: \"Copyright {name}, {year}\"\n    },\n    {\n      id: \"footer-made-with-love\",\n      defaultMessage: \"Made with ❤️\"\n    }\n  ]\n  ","import header from \"./header\"\nimport footer from \"./footer\"\n\nexport default {\n  name: \"cs\",\n  items: [header, footer]\n}\n","export default [\n  {\n    id: 'header-nav-home',\n    defaultMessage: 'Domov',\n  },\n  {\n    id: 'header-nav-about',\n    defaultMessage: 'O nás',\n  },\n  {\n    id: 'header-nav-contact',\n    defaultMessage: 'Kontakt',\n  },\n]\n","export default [\n    {\n      id: \"footer-copyright\",\n      defaultMessage: \"autorská práva {name}, {year}\"\n    },\n    {\n      id: \"footer-made-with-love\",\n      defaultMessage: \"Vyrobeno pomocí ❤️\"\n    }\n  ]\n  ","import React, { Component } from \"react\"\nimport { IntlProvider, addLocaleData } from \"react-intl\"\nimport en from \"react-intl/locale-data/en\"\nimport tr from \"react-intl/locale-data/tr\"\nimport cs from \"react-intl/locale-data/cs\"\nimport translations from \"../../i18n\"\n\naddLocaleData([...en, ...tr, ...cs])\n\nconst LanguageContext = React.createContext({\n  currentLang: {},\n  setLang: () => {},\n})\n\nconst withLang = Component => props => (\n  <LanguageContext.Consumer>\n    {language => <Component {...props} language={language} />}\n  </LanguageContext.Consumer>\n)\n\nclass LanguageProvider extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentLang: \"tr\",\n    }\n  }\n\n  setLanguage = data => {\n    this.setState({ currentLang: data })\n  }\n  render() {\n    const { currentLang } = this.state\n    return (\n      <LanguageContext.Provider\n        value={{ currentLang, setLanguage: this.setLanguage }}\n      >\n        <IntlProvider\n          locale={currentLang}\n          defaultLocale=\"tr\"\n          messages={translations[currentLang].messages}\n        >\n            {this.props.children}\n        </IntlProvider>\n      </LanguageContext.Provider>\n    )\n  }\n}\n\nexport { LanguageProvider, withLang }\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { defaultMessages } from '../../i18n'\nimport logo from '../../logo.svg'\nimport { withLang } from '../LanguageContex'\n\nexport default withLang(({ language }) => (\n  <header className='App-header'>\n    <nav>\n      <span className='App-link'>\n        <FormattedMessage {...defaultMessages['header-nav-home']}>\n          {txt => txt}\n        </FormattedMessage>\n      </span>\n      <span className='App-link'>\n        <FormattedMessage {...defaultMessages['header-nav-about']}>\n          {txt => txt}\n        </FormattedMessage>\n      </span>\n      <span className='App-link'>\n        <FormattedMessage {...defaultMessages['header-nav-contact']}>\n          {txt => txt}\n        </FormattedMessage>\n      </span>\n      <select onChange={val => language.setLanguage(val.target.value)}>\n        <option value='tr'>Türkçe</option>\n        <option value='en'>English</option>\n        <option value='cs'>Čeština</option>\n      </select>\n    </nav>\n    <img src={logo} className='App-logo' alt='logo' />\n  </header>\n))\n","import React from \"react\"\nimport { FormattedMessage, injectIntl } from \"react-intl\"\nimport { defaultMessages } from \"../../i18n\"\n/* to use translations as string or in js\n    use 'injectInt' and 'formatMessage' from 'intl' object */\n\nexport default injectIntl(({ intl }) => (\n  <footer>\n    <div>\n      <FormattedMessage\n        {...defaultMessages[\"footer-copyright\"]}\n        values={{ name: \"Yusuf\", year: 2018 }}\n      >\n        {txt => txt}\n      </FormattedMessage>\n    </div>\n    <div>\n      {intl.formatMessage({ ...defaultMessages[\"footer-made-with-love\"] })}\n    </div>\n  </footer>\n))\n","import React, { Component } from \"react\"\nimport { LanguageProvider } from \"./components/LanguageContex\"\nimport Header from \"./components/Header\"\nimport Footer from \"./components/Footer\"\nimport \"./App.css\"\n\nclass App extends Component {\n  render() {\n    return (\n      <LanguageProvider>\n        <div className=\"App\">\n          <Header />\n          <Footer />\n        </div>\n      </LanguageProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}